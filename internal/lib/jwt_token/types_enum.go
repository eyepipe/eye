// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package jwt_token

import (
	"errors"
	"fmt"
)

const (
	// AlgoHS256 is a Algo of type HS256.
	AlgoHS256 Algo = "HS256"
	// AlgoHS384 is a Algo of type HS384.
	AlgoHS384 Algo = "HS384"
	// AlgoHS512 is a Algo of type HS512.
	AlgoHS512 Algo = "HS512"
)

var ErrInvalidAlgo = errors.New("not a valid Algo")

// AlgoValues returns a list of the values for Algo
func AlgoValues() []Algo {
	return []Algo{
		AlgoHS256,
		AlgoHS384,
		AlgoHS512,
	}
}

// String implements the Stringer interface.
func (x Algo) String() string {
	return string(x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x Algo) IsValid() bool {
	_, err := ParseAlgo(string(x))
	return err == nil
}

var _AlgoValue = map[string]Algo{
	"HS256": AlgoHS256,
	"HS384": AlgoHS384,
	"HS512": AlgoHS512,
}

// ParseAlgo attempts to convert a string to a Algo.
func ParseAlgo(name string) (Algo, error) {
	if x, ok := _AlgoValue[name]; ok {
		return x, nil
	}
	return Algo(""), fmt.Errorf("%s is %w", name, ErrInvalidAlgo)
}
